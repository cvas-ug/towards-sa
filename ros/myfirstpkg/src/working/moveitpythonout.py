#!usr/bin/env python

import sys
import copy
import rospy
import moveit_commander
import moveit_msgs.msg
import geometry_msgs.msg
from std_msgs.msg import String
import random

moveit_commander.roscpp_initialize(sys.argv)
rospy.init_node('random_outoftherange', anonymous=True)
# The "RobotCommander" object is an interface to Baxter (or any robot) as a whole.
robot = moveit_commander.RobotCommander()
# This is an interface to the world surrounding the robot.
scene = moveit_commander.PlanningSceneInterface()
# This is an interface to one group of joints.  In our case, we want to use the "right_arm".
#We will use this to plan and execute motions
group_both = moveit_commander.MoveGroupCommander("both_arms")
group_right = moveit_commander.MoveGroupCommander("right_arm")
group_left = moveit_commander.MoveGroupCommander("left_arm")

pose_target_left = geometry_msgs.msg.Pose()
pose_target_right = geometry_msgs.msg.Pose()

# orientation.x, orientation.y, orientation.z, orientation.w, position.x, position.y, position.z
right_arm_simulator =[
[0.495088964857, 0.868820119093, 0.0052328973379, 0.0033368132184, 0.167799891523, -0.42014878352, 0.218327297379], #0 home
[-0.257, -0.403, 0.726, -0.495, 0.235, -1.298, 1.369],          #1 welcome
[0.342, 0.940, 0.005, 0.004, -0.108, -0.927, 0.617],            #2 Random1
[-0.079, 0.022, -0.495, 0.865,-0.005, -0.475, 2.418],    	#3 mo3aqab
[0.0534863527029, 0.99824127692, -0.00789752135613, 0.024314445976, 0.173722031251, -0.435980228145, 0.218794283283], #4home
[0.233, 0.972, -0.008, 0.022, 0.199, -0.985, 1.218],            #5 karate
[0.194, 0.907, -0.365, 0.078, 0.030, -1.226, 0.655], 		#6 Gerardo
[0.060, -0.001, 0.335, 0.940, 0.311, -0.435, 2.430], 		#7 mo3aqab2
[0.525, -0.551, 0.191, 0.620, -0.068, -0.988, 1.450], 		#8 random2
[-0.207, -0.229, 0.948, -0.081, -0.207, -0.229, 0.948, -0.081], #9random3
[-0.784, -0.185, 0.313, 0.503, -0.864, -0.203, 1.238], 		#10 ma 3indy
[0.388, 0.539, 0.395, 0.635, 0.147, -0.846, 0.895], 		#11 open
#[0.214, 0.976, -0.012, 0.046, 0.166, -0.665, 0.531] 		 #12 spider
[-0.251, 0.967, -0.028, 0.037, -0.016, -0.906, 0.508] 		#12 spider
]

left_arm_simulator =[
[-0.55990460938, 0.828529441367, -0.00555327412011, 0.00386708274987, 0.181666578573, 0.413565742627, 0.21833370248], #0 home
[-0.312633560481, 0.445291780918, 0.469006757274, 0.695706941419, 0.276027138406, 1.35779027746, 1.30002692835], #1 welcome
[-0.560, 0.828, -0.006, 0.004, 0.030, 0.937, 0.754],  #2 Random1
[0.050, -0.086, 0.558, 0.824, -0.078, 0.498, 2.404],  #3 mo3aqab
[-0.96083388986, 0.272626749104, 0.0357994117987, 0.0345151254332, 0.158498059536, 0.452384904453, 0.220246798588], #4 home
[0.768, -0.638, -0.020, -0.047, 0.214, 0.982, 1.220], #5 karate
[-0.268, 0.354, 0.587, 0.677, 0.020, 1.234, 1.987],   #6 Gerardo
[0.054, -0.023, 0.644, 0.763, 0.056, 0.542, 2.414],   #7 mo3aqab2
[-0.013, 0.519, -0.381, 0.765, 0.328, 0.374, 2.224],  #8 random2
[0.756, 0.649, -0.024, -0.087, 0.406, 0.740, 0.448],  #9 random3
[0.391, 0.664, -0.569, -0.287, -0.895, 0.206, 1.252], #10 ma 3indy
[0.157, 0.710, 0.246, 0.641, 0.301, 0.976, 0.883],    #11 open
#[0.799, -0.600, -0.030, -0.036, 0.143, 0.689, 0.531]  #12 spider
[0.168, 0.985, 0.026, -0.022, 0.014, 0.859, 0.485]    #12 spider
]

right_arm =[
	[0.268953676002, 0.65470880105, -0.0798856384998, 0.0436816657414, 0.0515107935888, -0.747884117761, -0.475792132942], 
	[0.652806478172, 0.031950093615, 0.743638835567, 0.143404206529, 0.48372186804, -0.836529066825, -0.0342253395161],
	[0.987312285634, -0.0327049263859, 0.0274833081188, 0.152711793398, 0.0957712516146, -0.707284634813, -0.675267049905],
	[-0.972639069947, 0.037349355636, 0.0179394505782, 0.227931338528, 0.0731419558869, -0.313559024516, -0.489267620282],
	[0.71969235926, 0.572550151681, -0.375290149941, 0.116111641543, -0.399585700291, -1.03147585777, -0.375239942786],
	[-0.773898699482, -0.499105350268, 0.344240174709, 0.182748534149, -0.73470308325, -0.594994366697, -0.392306523999],
	[0.0966301852359, -0.0392511621872, 0.532305407357, 0.840112719885, -0.561142340812, -0.82888169039, 0.740561761807],
	[0.119706596371, -0.368452504269, 0.266718427945, 0.882302779625, -0.595418018118, -0.702429522139, 1.24773482217],
	[0.268953676002, -0.656689721801, 0.327750716043, 0.678350557561, -1.00293033542, -0.783005313911, 0.488471452791],
	[0.268953676002, -0.137452560962, 0.220833555174, 0.794826793723, -0.80009001023, -0.158358423475, 0.532342061625],
	[0.268953676002, -0.275311878621, 0.359687852995, 0.0391648679846, -0.62950361321, -0.579660614202, -0.488226930556],
	[0.268953676002, -0.275311878621, 0.359687852995, 0.0391648679846, -0.62950361321, -0.579660614202, -0.488226930556],
	[0.268953676002, 0.130729485383, -0.623227440243, 0.647950433954, -0.667632860564, -0.768664518544, 0.312069640494],
	[0.161206870709, -0.220384179088, 0.149446804014, 0.950478050893, -0.461582357659, -0.692894184605, 0.10349422944],
	[0.322466569495, -0.266789264405, 0.735088257474, 0.533589128833, 0.349851221444, -1.12281962052, 1.14103032131],
	[0.35701800454, -0.642466502755, 0.537750505184, 0.414572496546, 0.0329442885836, -1.452075022, 0.349310900403],
	[0.106822257506, -0.0509293173398, 0.418119574256, 0.901017903085, -0.0154374835637, -0.551162919329, 1.49664417629],
	[0.322466569495, -0.266789264405, 0.735088257474, 0.533589128833, 0.349851221444, -1.12281962052, 1.14103032131],
	[-0.0177472490835, -0.299702233686, 0.747813856092, 0.592724302898, -0.381945018669, -0.904457761296, 1.26164706843],
	[-0.288047760795, -0.238334239832, -0.795346421575, 0.47738665768, -0.218550700864, -0.699386845721, 0.844134022766],
	[-0.0381046842173, -0.0138123666533, 0.958285728278, 0.282855643887, -0.0545634989753, -0.694564746111, 1.09401498489],
	[-0.0482639120738, -0.0792579663706, 0.613696849453, 0.784078373885, -0.0967932495864, -1.06799732891, 0.817975606052],
	[-0.0463764432638, -0.0770499142012, 0.787848094643, 0.608783935073, 0.28204984624, -1.04700233242, 0.811761078199],
	[0.268953676002, 0.401572725164, 0.490367178057, 0.566459884749, -0.0072080333329, -0.339316520209, 0.812917112864],
	[-0.0536152619193, -0.0173774290878, 0.704016480105, 0.708004641844, 0.00241222352768, -0.68528741029, 1.14520684139],
	[-0.505175092238, -0.451476828561, 0.554749928622, 0.483592898832, -0.786911228332, -0.745570433451, 0.423372532386],
	[-0.963825653092, -0.163180703476, 0.0671686926338, 0.2007054424, -0.415290951817, -0.498706121058, -0.286345975561],
	[0.268953676002, -0.805086700019, 0.311520539273, 0.456278037884, -0.599908188185, -0.461559573189, 0.144543067323],
	[-0.538862781014, 0.609124883427, -0.336854781355, 0.47436454376, 0.321712944676, -0.66530598989, -0.363172969619],
	[0.0119094271301, 0.873819999166, -0.482885970912, 0.0559219287099, -0.529037254291, -0.966571500356, -0.150226865813],
	[0.268953676002, -0.679573227862, 0.310794062305, 0.627842824727, -0.652646329478, -0.742684809483, 0.817687139125],
	[0.0689108015864, -0.958826771644, 0.160732423871, 0.223903500645, -0.447657604639, -0.699122651393, -0.558018938731],
	[0.268953676002, -0.0621998224921, 0.728018630829, 0.680736274832, -0.40699382702, -0.517805890322, 1.20760470971],
	[0.268953676002, -0.618374798062, 0.268305561597, 0.67954935322, -0.378077258912, -0.681835741469, 0.632362434537]
]

left_arm =[
	[0.721841535996, 0.691324912183, 0.0318364838345, 0.00136470525703, 0.0811538137863, 0.729926928795, -0.45962868076],
	[-0.48700406742, 0.507838731568, -0.511904301089, 0.492130708024, 0.523730766937, 0.634646632105, -0.0764811760624],
	[-0.712177556823, 0.698947506273, 0.0394042376639, 0.0451491789846, 0.0917252835945, 0.660227269703, -0.682733544832],
	[0.742041999661, -0.639705300767, 0.110342011708, 0.16810371454, 0.0131437864384, 0.354385974141, -0.446289442384],
	[-0.804509444563, 0.47818330982, 0.338735177911, 0.0967860183314, -0.516032604506, 0.979772874475, -0.334469094914],
	[-0.901095910577, 0.330752365915, 0.279537964638, 0.0183780106594, -0.603957656902, 0.650681856083, -0.488403855517],
	[0.399323580017, -0.0573198200708, -0.562699541976, 0.721744628633, -0.818514340902, 0.503285389862, 0.695056758181],
	[-0.292392514311, 0.146932889379, 0.679040011553, 0.657555928876, -0.428187669945, 0.846920668784, 1.25531280696],
	[-0.611213233293, -0.243367991144, 0.48421343624, 0.57655157376, -0.962558941929, 0.853100133381, 0.555441118394],
	[0.608462360337, -0.156431779983, -0.159811810692, 0.761532867582, -0.796403242187, -0.0743684819767, 0.528674609762],
	[0.296716694787, -0.890915519928, -0.272232981943, 0.209603628686, -0.729215075006, 0.622593754724, -0.39139307938],
	[0.296716694787, -0.890915519928, -0.272232981943, 0.209603628686, -0.729215075006, 0.622593754724, -0.39139307938],
	[-0.446010950116, -0.292558152098, 0.0686007681222, 0.843245966987, -0.594562244057, 0.845533060042, 0.251827324679],
	[0.129594138182, -0.419196490249, -0.611334170986, 0.658409099547, -0.586945993321, 0.751129481227, 0.0365583276341],
	[-0.0543856352694, 0.364003522014, 0.853084671187, 0.369441983033, 0.325758744773, 1.04396944242, 1.22198458342],
	[-0.62453473705, 0.268330422904, 0.25053359074, 0.689626993367, 0.070118064489, 1.4488349008, 0.487595168016],
	[-0.0972274498584, -0.0430821416564, -0.561297661335, 0.820678801777, 0.00389753527177, 0.54233594101, 1.49440360327],
	[-0.0543856352694, 0.364003522014, 0.853084671187, 0.369441983033, 0.325758744773, 1.04396944242, 1.22198458342],
	[0.0946145832561, -0.318481697269, -0.923377276278, 0.192526440684, -0.322954576609, 0.948740480249, 1.25476488473],
	[0.127323832439, 0.00594555754763, 0.218396299203, 0.967666998916, -0.277607692006, 0.878712864977, 0.872462459216],
	[-0.00659740566139, 0.00835908201137, 0.552164666362, 0.8333219825, 0.0900396097749, 0.745531625627, 1.23882758166],
	[0.00258414051675, 0.00525859987541, 0.29037077151, 0.956720349982, 0.143620339318, 1.05908157641, 0.853600345486],
	[0.0053415925143, 0.0113614695643, 0.330798150702, 0.943594828489, 0.278415151812, 1.03703091897, 0.848712066299],
	[0.487717051646, -0.52262427263, 0.548235045599, 0.433457029206, 0.0625411816146, 0.245310267665, 0.859806188725],
	[-0.00815775800125, -0.0428328289362, 0.242442928736, 0.969198612286, 0.0213672783485, 0.701108863315, 1.22292157775],
	[-0.258077633142, -0.663213467676, 0.218140318437, 0.667723518361, -0.755262370003, 0.701027071179, 0.416906345678],
	[-0.474721526099, -0.862171548271, -0.0528536512754, 0.168872185958, -0.46570207662, 0.614027089314, -0.2338997662],
	[-0.432836898359, -0.772166067381, -0.0655557495078, 0.460769208697, -0.503057742568, 0.575068409081, 0.106828143194],
	[0.797791434556, 0.114341120768, 0.337360571963, 0.48606571121, 0.333229919683, 0.420836698032, -0.369993662274],
	[-0.329423782201, -0.713288047172, -0.431485772112, 0.443075763202, -0.749371062257, 0.886031217718, -0.0234822069829],
	[-0.0097887659414, -0.953894465502, -0.166965167847, 0.248910328216, -0.516049376212, 0.668664657325, -0.540385859665],
	[-0.714748633881, 0.18330721847, 0.589619841, 0.327554092609, -0.611487121246, 0.762282033643, 0.787645790455],
	[0.0865400681937, -0.0193398662066, -0.990958200796, 0.101635032398, -0.395134088351, 0.522295514426, 1.24344489853],
	[0.396982599829, -0.547235072008, -0.736853525381, 0.00865707534805, -0.298662020119, 0.743678596704, 0.643222393348]
]

def pose_right(r=0):
	pose_target_right.orientation.x = right_arm[r][0] 
	pose_target_right.orientation.y = right_arm[r][1] 
	pose_target_right.orientation.z = right_arm[r][2] 
	pose_target_right.orientation.w = right_arm[r][3] 
	pose_target_right.position.x = right_arm[r][4]
	pose_target_right.position.y = right_arm[r][5]
	pose_target_right.position.z = right_arm[r][6]

def pose_left(l=0):
	pose_target_left.orientation.x =  left_arm[l][0]
	pose_target_left.orientation.y =  left_arm[l][1]
	pose_target_left.orientation.z =  left_arm[l][2]
	pose_target_left.orientation.w =  left_arm[l][3]
	pose_target_left.position.x =  left_arm[l][4]
	pose_target_left.position.y =  left_arm[l][5]
	pose_target_left.position.z =  left_arm[l][6]



# Now, add your Pose msg to the group's pose target
# group.set_pose_target(pose_target)

rr = rospy.Rate(10) # 10hz
while not rospy.is_shutdown():
#Now, add your Pose msg to the group's pose target
    count = 0
    while count<=20:
    	r = random.randint(0, 33)
    	print("Now execute : right ({})".format(r))
    	pose_right(r)
    	group_right.set_pose_target(pose_target_right, end_effector_link = "right_gripper")
    	plan = group_right.plan()
    	ret = group_right.execute(plan)
    	rr.sleep()
     	count +=1

    count = 0
    while count<=20:
    	l = random.randint(0, 33)
    	print("Now execute : left({})".format(l))
    	pose_left(l)
    	group_left.set_pose_target(pose_target_left, end_effector_link = "left_gripper")
    	plan = group_left.plan()
    	ret = group_left.execute(plan)
    	rr.sleep()
     	count +=1

    count = 0
    while count<=20:
    	l = random.randint(0, 33)
    	r = random.randint(0, 33)
    	print("Now execute : right ({}) and left({})".format(r,l))
    	pose_right(r)
    	pose_left(l)
    	group_both.set_pose_target(pose_target_left, end_effector_link = "left_gripper")
    	group_both.set_pose_target(pose_target_right, end_effector_link = "right_gripper")
    	plan = group_both.plan()
    	ret = group_both.execute(plan)
    	rr.sleep()
     	count +=1
